---
http_interactions:
- request:
    method: get
    uri: http://imdb.com/title/tt0071562/?ref_=chttp_tt_3
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Date:
      - Sun, 21 May 2017 14:40:37 GMT
      Server:
      - Server
      Location:
      - http://www.imdb.com/title/tt0071562/?ref_=chttp_tt_3
      Content-Length:
      - '260'
      Nncoection:
      - close
      Content-Type:
      - text/html; charset=iso-8859-1
    body:
      encoding: UTF-8
      string: |
        <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
        <html><head>
        <title>301 Moved Permanently</title>
        </head><body>
        <h1>Moved Permanently</h1>
        <p>The document has moved <a href="http://www.imdb.com/title/tt0071562/?ref_=chttp_tt_3">here</a>.</p>
        </body></html>
    http_version: 
  recorded_at: Sun, 21 May 2017 14:35:46 GMT
- request:
    method: get
    uri: http://www.imdb.com/title/tt0071562/?ref_=chttp_tt_3
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sun, 21 May 2017 14:40:40 GMT
      Server:
      - Server
      X-Frame-Options:
      - SAMEORIGIN
      Content-Security-Policy:
      - frame-ancestors 'self' imdb.com *.imdb.com *.media-imdb.com withoutabox.com
        *.withoutabox.com amazon.com *.amazon.com amazon.co.uk *.amazon.co.uk amazon.de
        *.amazon.de translate.google.com images.google.com www.google.com www.google.co.uk
        search.aol.com bing.com www.bing.com
      Content-Type:
      - text/html;charset=UTF-8
      Content-Language:
      - en-US
      Vary:
      - Accept-Encoding,User-Agent
      Set-Cookie:
      - session-id-time=1653057641; Domain=.imdb.com; Expires=Fri, 08-Jun-2085 17:54:48
        GMT; Path=/
      - session-id=000-0000000-0000000; Domain=.imdb.com; Expires=Fri, 08-Jun-2085
        17:54:48 GMT; Path=/
      - uu=BCYkKTZZsjVnl5-eIUydSnH_Mw8IpWoXZHvura0U-hhnolDPcO7z2o-3PSV0L9hHmoU2oiWBjB3U%0D%0ADpmeu11QKcfZi47AcZ2qPcXsHSORLBDKESpcF0md--ZAo2XsogB-6Bdj2VMVHGtLYUlr0yXFfeYu%0D%0AtQjq5dRIwWk4ouL10gJOy2ar_0zUG2_W1KbYBAN-rjPNMQULBp31dXbM2CCIyyYkdgnuVwc6jRuq%0D%0AXWKPrn4aFMwBlFufF0PZSDsHbXlWcC3UldAMOEfg8ABOloiWjfRCQA%0D%0A;
        Domain=.imdb.com; Expires=Fri, 08-Jun-2085 17:54:48 GMT; Path=/
      P3p:
      - policyref="http://i.imdb.com/images/p3p.xml",CP="CAO DSP LAW CUR ADM IVAo
        IVDo CONo OTPo OUR DELi PUBi OTRi BUS PHY ONL UNI PUR FIN COM NAV INT DEM
        CNT STA HEA PRE LOC GOV OTC "
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Sun, 21 May 2017 14:35:50 GMT
recorded_with: VCR 3.0.3
